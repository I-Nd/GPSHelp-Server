package com.example.study.dao;

import com.example.study.dataobject.Task;
import java.util.List;

import com.example.study.dataobject.build.TaskSqlBuild;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

public interface TaskMapper {


    @SelectProvider(type= TaskSqlBuild.class,method = "buildQueryTask")
    List<Integer> queryByOpenid(String openid);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Feb 15 00:15:35 CST 2019
     */
    @Delete({
        "delete from task",
        "where task_id = #{taskId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long taskId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Feb 15 00:15:35 CST 2019
     */
    @Insert({
        "insert into task (task_id, receiver_id, ",
        "openid, route_id, ",
        "organization_id, event_address, ",
        "event_longitude, event_latitude, ",
        "event_location, number_people, ",
        "type)",
        "values (#{taskId,jdbcType=BIGINT}, #{receiverId,jdbcType=INTEGER}, ",
        "#{openid,jdbcType=VARCHAR}, #{routeId,jdbcType=INTEGER}, ",
        "#{organizationId,jdbcType=BIGINT}, #{eventAddress,jdbcType=VARCHAR}, ",
        "#{eventLongitude,jdbcType=VARCHAR}, #{eventLatitude,jdbcType=VARCHAR}, ",
        "#{eventLocation,jdbcType=VARCHAR}, #{numberPeople,jdbcType=TINYINT}, ",
        "#{type,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys = true,keyProperty = "taskId",keyColumn = "task_id")
    int insert(Task record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Feb 15 00:15:35 CST 2019
     */
    @Select({
        "select",
        "task_id, receiver_id, openid, route_id, organization_id, event_address, event_longitude, ",
        "event_latitude, event_location, number_people, type",
        "from task",
        "where task_id = #{taskId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="task_id", property="taskId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.INTEGER),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="route_id", property="routeId", jdbcType=JdbcType.INTEGER),
        @Result(column="organization_id", property="organizationId", jdbcType=JdbcType.BIGINT),
        @Result(column="event_address", property="eventAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_longitude", property="eventLongitude", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_latitude", property="eventLatitude", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_location", property="eventLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="number_people", property="numberPeople", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR)
    })
    Task selectByPrimaryKey(Long taskId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Feb 15 00:15:35 CST 2019
     */
    @Select({
        "select",
        "task_id, receiver_id, openid, route_id, organization_id, event_address, event_longitude, ",
        "event_latitude, event_location, number_people, type",
        "from task"
    })
    @Results({
        @Result(column="task_id", property="taskId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.INTEGER),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="route_id", property="routeId", jdbcType=JdbcType.INTEGER),
        @Result(column="organization_id", property="organizationId", jdbcType=JdbcType.BIGINT),
        @Result(column="event_address", property="eventAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_longitude", property="eventLongitude", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_latitude", property="eventLatitude", jdbcType=JdbcType.VARCHAR),
        @Result(column="event_location", property="eventLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="number_people", property="numberPeople", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR)
    })
    List<Task> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Feb 15 00:15:35 CST 2019
     */
    @Update({
        "update task",
        "set receiver_id = #{receiverId,jdbcType=INTEGER},",
          "openid = #{openid,jdbcType=VARCHAR},",
          "route_id = #{routeId,jdbcType=INTEGER},",
          "organization_id = #{organizationId,jdbcType=BIGINT},",
          "event_address = #{eventAddress,jdbcType=VARCHAR},",
          "event_longitude = #{eventLongitude,jdbcType=VARCHAR},",
          "event_latitude = #{eventLatitude,jdbcType=VARCHAR},",
          "event_location = #{eventLocation,jdbcType=VARCHAR},",
          "number_people = #{numberPeople,jdbcType=TINYINT},",
          "type = #{type,jdbcType=VARCHAR}",
        "where task_id = #{taskId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Task record);
}